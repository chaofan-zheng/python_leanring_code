前情回顾

1. 聊天室
   * 结构模型
   * 网络协议设定
   * 思路流程
   * 模块拆分，每设计一个写一个，写一个测一个

2. 线程

   * 多任务编程方法
   * 线程是进程的一个分支
   * 创建起来资源消耗少 轻量级
   * 共享进程资源

3. 创建线程
   Thread()
   start()
   join()

   线程对象方法  自定义线程类

4. 共享资源争夺

   同步互斥方法

   原理： 利用阻塞控制对共享资源的使用

练习1:
使用2个线程，一个打印 1--52 这些数字
一个打印 A--Z 这些字母，
两个线程一起执行，要求打印出来的顺序为
12A34B ...... 5152Z

for i in range(65,91):
    chr(i)

练习：
1. 完成多进程并发代码
2. 仿照多进程并发编写多线程并发代码
要求使用面向对象的思想完成描述


ftp文件服务分析

需求分析

分为服务端和客户端，要求可以有多个客户端同时操作。
客户端可以查看服务器文件库中有什么文件。
客户端可以从文件库中下载文件到本地。
客户端可以上传一个本地文件到文件库。
使用print在客户端打印命令输入提示，引导操作

技术分析
   网络并发模型： 多线程并发
   网络 ：  tcp传输
   文件传输 ： 读发   收写

功能划分 和 封装设计

   封装设计 ： 类

   查看文件库文件
   下载文件
   上传文件
   退出

网络通信协议设计
              请求类型   数据参量
   查看         LIST
   下载文件      GET     filename
   上传文件      PUT     filename
   退出         EXIT

   响应 ： 服务端根据不同的情况给
   客户端的反馈也不相同

   成功 ：  OK
   失败 ： FAIL


具体功能逻辑设计

   框架--》并发模型框架
      服务端： 多线程tcp网络并发

      客户端 : 打印出菜单提供选项


   查看文件库文件
      客户端: 发送请求
             接受等待响应
             根据响应处理
             OK 接收列表
             FAIL 结束

      服务端： 解析请求
              判断给出什么响应
              OK 发送文件列表
              FAIL 结束


   下载文件
   上传文件
   退出

作业 ： 1. 重点代码熟练
       2. 读ftp的结构
       3. 完成上传或者下载功能







