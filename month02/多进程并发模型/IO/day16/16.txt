前情回顾

1. 线程的同步互斥方法
   Lock()
   lock.acquire()
   lock.release()

   死锁

2. GIL问题

  Python线程应对无阻塞的情形时效率低

3. 进程和线程的对比

4. 网络并发模型

   多任务并发 --》 多进程和多线程




ftp文件服务分析

需求分析

分为服务端和客户端，要求可以有多个客户端同时操作。
客户端可以查看服务器文件库中有什么文件。
客户端可以从文件库中下载文件到本地。
客户端可以上传一个本地文件到文件库。
使用print在客户端打印命令输入提示，引导操作

技术分析
   网络并发模型： 多线程并发
   网络 ：  tcp传输
   文件传输 ： 读发   收写

功能划分 和 封装设计

   封装设计 ： 类

   查看文件库文件
   下载文件
   上传文件
   退出

网络通信协议设计
              请求类型   数据参量
   查看         LIST
   下载文件      GET     filename
   上传文件      PUT     filename
   退出         EXIT

   响应 ： 服务端根据不同的情况给
   客户端的反馈也不相同

   成功 ：  OK
   失败 ： FAIL


具体功能逻辑设计

   框架--》并发模型框架
      服务端： 多线程tcp网络并发

      客户端 : 打印出菜单提供选项


   查看文件库文件
      客户端: 发送请求
             接受等待响应
             根据响应处理
             OK 接收列表
             FAIL 结束

      服务端： 解析请求
              判断给出什么响应
              OK 发送文件列表
              FAIL 结束

   下载文件
        客户端： 发送请求
                等待接收响应
                OK  接收文件
                FAIL 结束

        服务端 ： 判断文件是否存在
                 发送响应
                 OK 发送文件
                 FAIL 结束



   上传文件
   退出

练习1： 将刚刚完成的select_server
改写为 使用poll方法完成
注意： 不必使用写操作


作业：
1. 学会使用select方法搭建IO网络服务
2. 进程线程总结

